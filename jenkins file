pipeline {
    agent any
    tools {
        maven "Maven"
    } 
    environment {
        registry = "338290417453.dkr.ecr.us-east-2.amazonaws.com/mydockerrepo"
    }
    stages {
        stage('Checkout') {
            steps {
                 checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/chpk207/springboot-app.git']]])
            }
        }
        stage("Build Jar"){
            steps{
                sh "mvn clean install"
            }
        }
        stage("Build Image"){
            steps{
                script {
                    docker.build registry
                }
            }
        }
        stage("Push into ECR"){
            steps{
                sh "aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 338290417453.dkr.ecr.us-east-2.amazonaws.com"
                sh "docker push 338290417453.dkr.ecr.us-east-2.amazonaws.com/mydockerrepo:latest"    
        
            }
        }
        stage("K8S Deploy"){
            steps{
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'k8s', namespace: '', serverUrl: '') {
                sh "kubectl apply -f eks-deploy-k8s.yaml"
                
                }
            }
        }
        
    }
}
